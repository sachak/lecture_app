name: Azure Static Web Apps – OIDC deploy

# Déclenche le workflow sur chaque push (ou PR) vers main
on:
  push:
    branches: [ main ]
  pull_request:
    types: [ opened, synchronize, reopened, closed ]
    branches: [ main ]

# Les permissions requises pour OIDC
permissions:
  id-token: write        # indispensable pour l’émission du jeton OIDC
  contents: read

jobs:
  deploy:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build / Deploy Static Web App

    steps:
      # 1) Récupère le code
      - uses: actions/checkout@v3

      # 2) Déploie la SWA (sans token, grâce à OIDC)
      - name: Azure Static Web Apps Deploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          # AUCUNE ligne azure_static_web_apps_api_token ici !
          action: upload

          # Chemins de ton site
          app_location: "/"          # index.html et les fichiers sont à la racine
          api_location: ""           # pas d’API dans ce dépôt
          output_location: ""        # pas de dossier de build
          skip_app_build: true       # on saute complètement la phase build

          # Facultatif : permet à l’action de commenter les PR
          repo_token: ${{ secrets.GITHUB_TOKEN }}

  # Ferme le déploiement éphémère quand la Pull Request est close
  close_pr:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    steps:
      - uses: Azure/static-web-apps-deploy@v1
        with:
          action: close
